{"remainingRequest":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/babel-loader/lib/index.js!/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/src/pages/room/callRoom/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/src/pages/room/callRoom/index.vue","mtime":1648104828601},{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/babel.config.js","mtime":1648104828534},{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"CallRoom\">\n    <div class=\"CallRoom-noRoom\" v-if=\"keepShow\">\n      <span class=\"CallRoom-noRoom-value\">请创建房间</span>\n    </div>\n    <scroller\n      v-else\n      class=\"infinite-list-wrapper\"\n      :on-refresh=\"reffor\"\n      :on-infinite=\"inffor\"\n      ref=\"scrfor\"\n    >\n      <ul class=\"infinite-list\">\n        <li\n          v-for=\"key in this.$store.state.roomList\"\n          class=\"list-item\"\n          :key=\"key.id\"\n        >\n          <RoomTab :data=\"key\" @joinchatRoom=\"joinchatRoom\" />\n        </li>\n      </ul>\n    </scroller>\n  </div>\n</template>\n\n<script>\nimport RoomTab from \"../roomTab/index.vue\";\nimport BScroll from \"better-scroll\";\nimport request from \"../../../request/index\";\nimport { GetQueryString } from \"../../../utils/utils\";\nexport default {\n  name: \"CallRoom\",\n  data: function () {\n    return {\n      roomsList: [],\n      loading: false,\n      myscroll: null,\n      dataList: [],\n      roomListLength: false,\n      page: 1,\n      size: 10,\n      keepShow: false,\n    };\n  },\n  watch: {\n    listenstage: function (newVal) {\n      console.log(\"newVal\", newVal);\n      this.$nextTick(() => {\n        if (this.$store.state.roomList.length > 0) {\n          this.keepShow = false;\n        } else {\n          this.keepShow = true;\n        }\n      });\n    },\n  },\n  components: {\n    RoomTab,\n  },\n  computed: {\n    noMore() {\n      if (this.roomListLength) {\n        return true;\n      }\n      return false;\n    },\n    listenstage() {\n      return this.$store.state.roomList;\n    },\n  },\n  // eslint-disable-next-line vue/no-dupe-keys\n  methods: {\n    getRoomList: function (page) {\n      // console.log(this.authorizationVal);\n      let reqObj = {\n        page: page,\n        size: this.size,\n      };\n      if (\n        //直播房间\n        GetQueryString(\"roomType\") &&\n        GetQueryString(\"roomType\") == \"liveRoom\"\n      ) {\n        reqObj.type = 3;\n      }\n      request\n        .roomList(reqObj)\n        .then((response) => {\n          this.dataList = response.data.data;\n          if (page == 1) {\n            this.$store.dispatch(\"changesRoomsList\", response.data.data.rooms);\n          } else {\n            this.$store.dispatch(\n              \"changesRoomsList\",\n              this.$store.state.roomList.concat(response.data.data.rooms)\n            );\n          }\n          response.data.data.rooms.length < 10\n            ? (this.roomListLength = true)\n            : (this.roomListLength = false);\n          // store.actions.changesVal([]);\n        })\n        .catch((err) => {\n          console.error(\"请求失败\", err);\n          // alert(\"请求失败\", err);\n        });\n    },\n    joinchatRoom: function (roomId) {\n      request\n        .roominformation({ roomId: roomId })\n        .then(async (res) => {\n          if (res.data.code == 10000) {\n            if (\n              //直播房间\n              GetQueryString(\"roomType\") &&\n              GetQueryString(\"roomType\") == \"liveRoom\"\n            ) {\n              this.$router.push(\"/live?roomid=\" + roomId);\n              return;\n            } else {\n              await this.$RCVoiceRoomLib.joinRoom(roomId);\n              this.$router.push(\"/room/house\");\n            }\n            await this.$RCVoiceRoomLib.joinRoom(roomId);\n            let txtEnter = {\n              userId: this.$RCVoiceRoomLib.im.userId,\n              userName: this.$store.state.userInfo.userName,\n            };\n            this.$RCVoiceRoomLib.im.messageUpdate(\n              \"RC:Chatroom:Enter\",\n              txtEnter\n            );\n\n            this.$router.push(\"/room/house\");\n          } else {\n            this.$router.push(\"/room/roomover\");\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    setBScroll: function () {\n      this.myscroll = null;\n      this.myscroll = new BScroll(\".infinite-list-wrapper\", {\n        pullDownRefresh: {\n          threshold: 50,\n          stop: 20,\n        },\n        scrollbar: {\n          fade: true,\n          interactive: false, // 1.8.0 新增\n        },\n        bounce: true,\n        probeType: 3, //0,1，2，3\n        pullUpLoad: true, //上拉加载更多,默认为false，不允许\n        click: true,\n      });\n      this.myscroll.on(\"pullingDown\", () => {\n        // console.log(\"下拉了\");\n        this.getRoomList(1);\n        this.page = 1;\n        setTimeout(() => {\n          this.myscroll.finishPullDown(); // 自动调用 .refresh()\n        }, 500);\n      });\n      this.myscroll.on(\"pullingUp\", () => {\n        this.loading = true;\n        this.page += 1;\n        setTimeout(() => {\n          this.loading = false;\n          this.myscroll.finishPullUp(); // 自动调用 .refresh()\n        }, 500);\n      });\n    },\n    reffor: async function () {\n      this.page = 1; //重置页数刷新每次页数都是第一页\n      try {\n        await this.getRoomList(1);\n        setTimeout(() => {\n          this.$refs.scrfor.finishPullToRefresh();\n          // done(); //进行下一次加载操作\n        }, 500);\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    // 上拉加载\n    inffor: async function (done) {\n      // console.log(\"上拉了\");\n      if (this.$store.state.roomList.length < 10) {\n        done(2);\n      } else {\n        if (this.$store.state.roomList.length > 10 && this.roomListLength) {\n          done(2);\n        } else {\n          this.page += 1;\n          try {\n            await this.getRoomList(this.page);\n            setTimeout(() => {\n              done(true); //进行下一次加载操作\n            }, 500);\n          } catch (err) {\n            console.log(err);\n          }\n        }\n      }\n    },\n  },\n  created() {},\n  mounted() {\n    this.$nextTick(() => {\n      if (this.$store.state.roomList.length > 0) {\n        this.keepShow = false;\n      } else {\n        this.keepShow = true;\n      }\n    });\n  },\n};\n</script>\n<style scoped>\n@import url(\"./index.css\");\n</style>"],"sourceRoot":"src/pages/room/callRoom"}]}