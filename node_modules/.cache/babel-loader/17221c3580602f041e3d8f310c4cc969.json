{"remainingRequest":"/Users/libin/Desktop/Gwork/rcrtc-web/node_modules/babel-loader/lib/index.js!/Users/libin/Desktop/Gwork/rcrtc-web/node_modules/eslint-loader/index.js??ref--13-0!/Users/libin/Desktop/Gwork/rcrtc-web/src/utils/utils.js","dependencies":[{"path":"/Users/libin/Desktop/Gwork/rcrtc-web/src/utils/utils.js","mtime":1647847845327},{"path":"/Users/libin/Desktop/Gwork/rcrtc-web/babel.config.js","mtime":1635324574352},{"path":"/Users/libin/Desktop/Gwork/rcrtc-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/libin/Desktop/Gwork/rcrtc-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/libin/Desktop/Gwork/rcrtc-web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9saWJpbi9EZXNrdG9wL0d3b3JrL3JjcnRjLXdlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAqIGFzIFJlY29yZFJUQyBmcm9tICJyZWNvcmRydGMiOwppbXBvcnQgcmVxdWVzdCBmcm9tICIuLi9yZXF1ZXN0L2luZGV4IjsKaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWcnOyAvL2ltcG9ydCB7IGludm9rZVNhdmVBc0RpYWxvZyB9IGZyb20gInJlY29yZHJ0YyIKCmZ1bmN0aW9uIEdldFF1ZXJ5U3RyaW5nKG5hbWUpIHsKICBpZiAoIXdpbmRvdy5sb2NhdGlvbi5ocmVmLnNwbGl0KCI/IilbMV0pIHsKICAgIHJldHVybjsKICB9CgogIHZhciBxdWVyeSA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmLnNwbGl0KCI/IilbMV07CiAgdmFyIHZhcnMgPSBxdWVyeS5zcGxpdCgiJiIpOwoKICBmb3IgKHZhciBpID0gMDsgaSA8IHZhcnMubGVuZ3RoOyBpKyspIHsKICAgIHZhciBwYWlyID0gdmFyc1tpXS5zcGxpdCgiPSIpOwoKICAgIGlmIChwYWlyWzBdID09IG5hbWUpIHsKICAgICAgcmV0dXJuIHBhaXJbMV07CiAgICB9CiAgfQoKICByZXR1cm47Cn0KCnZhciByZWNvcmRlcjsKdmFyIHN0bTsKdmFyIFJlY29yZGVyID0gewogIHN0YXR1czogMCwKICBzdGFydDogZnVuY3Rpb24gc3RhcnQoKSB7CiAgICBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSh7CiAgICAgIGF1ZGlvOiB0cnVlCiAgICB9KS50aGVuKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShzdHJlYW0pIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICByZWNvcmRlciA9IFJlY29yZFJUQyhzdHJlYW0sIHsKICAgICAgICAgICAgICAgICAgdHlwZTogJ2F1ZGlvJwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBzdG0gPSBzdHJlYW07CiAgICAgICAgICAgICAgICByZWNvcmRlci5zdGFydFJlY29yZGluZygpOwogICAgICAgICAgICAgICAgcmVjb3JkZXIuc3RhdFRpbWUgPSBuZXcgRGF0ZSgpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpOwoKICAgICAgcmV0dXJuIGZ1bmN0aW9uIChfeCkgewogICAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH07CiAgICB9KCkpOwogIH0sCiAgY2FuY2VsOiBmdW5jdGlvbiBjYW5jZWwoKSB7CiAgICByZWNvcmRlci5zdG9wUmVjb3JkaW5nKGZ1bmN0aW9uICgpIHt9KTsKICAgIHN0bS5nZXRUcmFja3MoKS5mb3JFYWNoKGZ1bmN0aW9uICh0cmFjaykgewogICAgICByZXR1cm4gdHJhY2suc3RvcCgpOwogICAgfSk7CiAgfSwKICBzdG9wOiBmdW5jdGlvbiBzdG9wKHVzZXIpIHsKICAgIHJlY29yZGVyLnN0b3BSZWNvcmRpbmcoZnVuY3Rpb24gKCkgewogICAgICB2YXIgYmxvYiA9IHJlY29yZGVyLmdldEJsb2IoKTsKICAgICAgYmxvYi5sYXN0TW9kaWZpZWREYXRlID0gbmV3IERhdGUoKTsKICAgICAgYmxvYi5uYW1lID0gImZpbGVOYW1lIjsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmCgogICAgICB2YXIgZmlsZSA9IG5ldyBGaWxlKFtibG9iXSwgInJlYy5tcDMiLCB7CiAgICAgICAgdHlwZTogIm1wMyIsCiAgICAgICAgbGFzdE1vZGlmaWVkOiBEYXRlLm5vdygpCiAgICAgIH0pOwogICAgICByZXF1ZXN0LnVwbG9hZGZpbGUoZmlsZSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHJlcy5kYXRhLmNvZGUgPT0gMTAwMDApIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCLkuIrkvKDmiJDlip/lnLDlnYDvvJoiLCBjb25maWcucGljUGF0aCwgcmVzLmRhdGEuZGF0YSk7CiAgICAgICAgICB2YXIgY29udGVudCA9IHsKICAgICAgICAgICAgX2R1cmF0aW9uOiBNYXRoLmZsb29yKChibG9iLmxhc3RNb2RpZmllZERhdGUgLSByZWNvcmRlci5zdGF0VGltZSkgLyAxMDAwICsgMSkgKyAiIiwKICAgICAgICAgICAgX3BhdGg6IGNvbmZpZy5waWNQYXRoICsgcmVzLmRhdGEuZGF0YSwKICAgICAgICAgICAgX3VzZXJJZDogdXNlci51c2VySWQsCiAgICAgICAgICAgIF91c2VyTmFtZTogdXNlci51c2VyTmFtZQogICAgICAgICAgfTsKICAgICAgICAgIHVzZXIuaW0ubWVzc2FnZVVwZGF0ZSgiUkM6VlJWb2ljZU1zZyIsIGNvbnRlbnQpOwogICAgICAgICAgdmFyIHZvaWNlTXNnOwogICAgICAgICAgdm9pY2VNc2cgPSAiPHNwYW4gc3R5bGU9J2NvbG9yOiM3ZjdmN2YnID4iICsgY29udGVudC5fdXNlck5hbWUgKyAiIDwvc3Bhbj4iICsgIjxzcGFuIGhlaWdodDogMjJweDtiYWNrZ3JvdW5kOiBub25lO2JvcmRlci1yYWRpdXM6IDRweDsgYm9yZGVyOiAxcHggc29saWQ7IGNvbG9yOiAjNjY2OyBvbmNsaWNrPVwibmV3IEF1ZGlvKCciICsgY29udGVudC5fcGF0aCArICInKS5wbGF5KCk7XCI+IiArIGNvbnRlbnQuX2R1cmF0aW9uICsgIicgIiArICI8c3BhbiAgc3R5bGU9J3dpZHRoOjIwcHg7aGVpZ2h0OjIwcHg7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLWJvdHRvbTotNXB4O2JhY2tncm91bmQtaW1hZ2U6IHVybCgiICsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmCiAgICAgICAgICByZXF1aXJlKCIuLi9hc3NldHMvbGl2ZS9pY29uLXZvaWNlLnBuZyIpICsgIik7ICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7YmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtiYWNrZ3JvdW5kLXNpemU6MTRweCAxNHB4Jz48L3NwYW4+IiArICI8L3NwYW4+IjsKICAgICAgICAgIHVzZXIuY2hhdHJvb20ucHVzaCh2b2ljZU1zZyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCLkuIrkvKDplJnor6/kuoYiLCByZXMpOwogICAgICAgIH0KCiAgICAgICAgc3RtLmdldFRyYWNrcygpLmZvckVhY2goZnVuY3Rpb24gKHRyYWNrKSB7CiAgICAgICAgICByZXR1cm4gdHJhY2suc3RvcCgpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0pOwogIH0KfTsKZXhwb3J0IHsgR2V0UXVlcnlTdHJpbmcsIFJlY29yZGVyIH07"},{"version":3,"sources":["/Users/libin/Desktop/Gwork/rcrtc-web/src/utils/utils.js"],"names":["RecordRTC","request","config","GetQueryString","name","window","location","href","split","query","vars","i","length","pair","recorder","stm","Recorder","status","start","navigator","mediaDevices","getUserMedia","audio","then","stream","type","startRecording","statTime","Date","cancel","stopRecording","getTracks","forEach","track","stop","user","blob","getBlob","lastModifiedDate","file","File","lastModified","now","uploadfile","res","data","code","console","log","picPath","content","_duration","Math","floor","_path","_userId","userId","_userName","userName","im","messageUpdate","voiceMsg","require","chatroom","push"],"mappings":"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","sourcesContent":["\nimport * as RecordRTC from \"recordrtc\"\nimport request from \"../request/index\";\nimport config from '../config'\n//import { invokeSaveAsDialog } from \"recordrtc\"\nfunction GetQueryString(name) {\n    if (!window.location.href.split(\"?\")[1]) {\n        return;\n    }\n    var query = window.location.href.split(\"?\")[1]\n    var vars = query.split(\"&\");\n    for (var i = 0; i < vars.length; i++) {\n        var pair = vars[i].split(\"=\");\n        if (pair[0] == name) { return pair[1]; }\n    }\n    return\n}\n\nlet recorder;\nlet stm;\nlet Recorder = {\n    status: 0,\n    start: function () {\n        navigator.mediaDevices.getUserMedia({\n            audio: true\n        }).then(async function (stream) {\n            recorder = RecordRTC(stream, {\n                type: 'audio'\n            });\n            stm = stream;\n            recorder.startRecording();\n            recorder.statTime = new Date();\n        });\n    },\n    cancel: function () {\n        recorder.stopRecording(function () { });\n        stm.getTracks().forEach(track => track.stop());\n    },\n    stop: function (user) {\n        recorder.stopRecording(function () {\n            let blob = recorder.getBlob();\n            blob.lastModifiedDate = new Date();\n            blob.name = \"fileName\";\n            // eslint-disable-next-line no-undef\n            var file = new File([blob], \"rec.mp3\", { type: \"mp3\", lastModified: Date.now() });\n\n            request.uploadfile(file).then((res) => {\n                if (res.data.code == 10000) {\n                    console.log(\"上传成功地址：\", config.picPath, res.data.data);\n                    let content = {\n                        _duration: Math.floor((blob.lastModifiedDate - recorder.statTime) / 1000 + 1) + \"\",\n                        _path: config.picPath + res.data.data,\n                        _userId: user.userId,\n                        _userName: user.userName\n                    }\n                    user.im.messageUpdate(\"RC:VRVoiceMsg\", content);\n                    let voiceMsg;\n                    voiceMsg =\n                        \"<span style='color:#7f7f7f' >\" +\n                        content._userName +\n                        \" </span>\" +\n                        `<span height: 22px;background: none;border-radius: 4px; border: 1px solid; color: #666; onclick=\"new Audio('` +\n                        content._path +\n                        `').play();\">` +\n                        content._duration +\n                        \"' \" +\n                        \"<span  style='width:20px;height:20px;display:inline-block;margin-bottom:-5px;background-image: url(\" +\n                        // eslint-disable-next-line no-undef\n                        require(\"../assets/live/icon-voice.png\") +\n                        \");  background-position: center;background-repeat: no-repeat;background-size:14px 14px'></span>\" +\n                        \"</span>\";\n\n\n                    user.chatroom.push(voiceMsg);\n                } else {\n                    console.log(\"上传错误了\", res);\n                }\n                stm.getTracks().forEach(track => track.stop());\n            });\n        });\n    }\n}\n\nexport {\n    GetQueryString,\n    Recorder,\n}"]}]}