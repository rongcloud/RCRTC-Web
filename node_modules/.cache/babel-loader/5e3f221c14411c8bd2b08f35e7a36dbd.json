{"remainingRequest":"/Users/libin/Desktop/Gwork/rcrtc-web/node_modules/babel-loader/lib/index.js!/Users/libin/Desktop/Gwork/rcrtc-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/libin/Desktop/Gwork/rcrtc-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/libin/Desktop/Gwork/rcrtc-web/src/components/room/FunctionKey.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/libin/Desktop/Gwork/rcrtc-web/src/components/room/FunctionKey.vue","mtime":1648176532423},{"path":"/Users/libin/Desktop/Gwork/rcrtc-web/babel.config.js","mtime":1635324574352},{"path":"/Users/libin/Desktop/Gwork/rcrtc-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/libin/Desktop/Gwork/rcrtc-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/libin/Desktop/Gwork/rcrtc-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/libin/Desktop/Gwork/rcrtc-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["FunctionKey.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <span\n    class=\"functionKey\"\n    @click=\"clickFunctionKey(item, userInfo)\"\n    :style=\"{\n      backgroundImage: item.img,\n    }\"\n  >\n    <span class=\"functionKey-span\">{{ item.value }}</span>\n    <PopuInput\n      ref=\"PopuInput\"\n      @clickYes=\"clickYes\"\n      @clickTitleYes=\"clickTitleYes\"\n    />\n    <Notice ref=\"Notice\" @clickYes=\"GetNotice\" @NoticeUpdate=\"NoticeUpdate\" />\n  </span>\n</template>\n<script>\nimport request from \"../../request/index\";\nimport PopuInput from \"../PopupInput.vue\";\nimport Notice from \"./Notice.vue\";\n\nexport default {\n  props: [\"item\", \"userInfo\"],\n  data() {\n    return {\n      type: \"\",\n      // eslint-disable-next-line no-undef\n      url: require(\"../../assets/roomicon/CloseRoom.png\"),\n    };\n  },\n  watch: {},\n  components: {\n    PopuInput,\n    Notice,\n  },\n  created() {},\n  mounted() {},\n  methods: {\n    clickFunctionKey: async function (item, userInfo) {\n      let txtMsgKickOut = null;\n      let seatcountChange = null;\n      switch (item.value) {\n        case \"关闭房间\":\n          try {\n            await this.$RCVoiceRoomLib\n              .leaveRoom(this.$RCVoiceRoomLib._roomidcli)\n              .then(async () => {\n                request\n                  .deleteRoom({\n                    roomId: this.$RCVoiceRoomLib._roomidcli,\n                  })\n                  .then(() => {\n                    this.$router.go(-1);\n                  })\n                  .catch((err) => {\n                    console.log(err);\n                  });\n              });\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"关闭房间失败\",\n            });\n            console.log(error);\n          }\n          break;\n        case \"离开房间\":\n          console.log(\"离开房间\");\n          if (this.$store.state.roomType == \"live\") {\n            try {\n              this.$RCLiveRoomLib.im.messageUpdate(\"RC:VRLRefreshMsg\", {\n                name: \"RCAudienceLeaveRoom\",\n                content: this.$RCLiveRoomLib.im.userId,\n              });\n              console.log(\"living\");\n              await this.$RCLiveRoomLib.leaveRoom(\n                this.$RCLiveRoomLib._roomidcli\n              );\n              console.log(\"living\", this.$RCLiveRoomLib._roomidcli);\n              this.$router.go(-1);\n            } catch (error) {\n              this.$store.dispatch(\"showToast\", {\n                value: \"离开房间失败\",\n              });\n              console.log(error);\n            }\n          } else {\n            try {\n              this.$RCVoiceRoomLib.im.messageUpdate(\"RC:VRLRefreshMsg\", {\n                name: \"RCAudienceLeaveRoom\",\n                content: this.$RCVoiceRoomLib.im.userId,\n              });\n              await this.$RCVoiceRoomLib.leaveRoom(\n                this.$RCVoiceRoomLib._roomidcli\n              );\n              this.$router.go(-1);\n            } catch (error) {\n              this.$store.dispatch(\"showToast\", {\n                value: \"离开房间失败\",\n              });\n              console.log(error);\n            }\n          }\n\n          break;\n        case \"收起房间\":\n          console.log(\"收起\");\n          this.$router.go(-1);\n          break;\n        case \"返回列表\":\n          this.$router.go(-1);\n          break;\n        case \"房间上锁\":\n          this.$emit(\"closeRoomFit\");\n          this.$refs.PopuInput.setPopup({\n            type: \"number\",\n            title: \"请输入 4 位数字密码\",\n            placeholder: \"请输入 4 位数字密码\",\n          });\n          break;\n        case \"房间解锁\":\n          this.$emit(\"closeRoomFit\");\n          request\n            .setRoomPrivate({\n              isPrivate: 0,\n              password: \"\",\n              roomId:\n                this.$store.state.roomType == \"live\"\n                  ? this.$RCLiveRoomLib._roomidcli\n                  : this.$RCVoiceRoomLib._roomidcli,\n            })\n            .then((res) => {\n              if (res.data.code == 10000) {\n                this.$store.dispatch(\"showToast\", {\n                  value: \"取消成功\",\n                });\n                this.$store.dispatch(\"getroomPrivate\", {\n                  isPrivate: 0,\n                  password: \"\",\n                });\n              }\n            });\n\n          break;\n        case \"房间标题\":\n          this.$emit(\"closeRoomFit\");\n          this.$refs.PopuInput.setPopup({\n            type: \"string\",\n            title: \"修改房间标题\",\n            value: this.$store.state.roomTitle,\n            // value: \"\",\n            placeholder: \"请输入房间标题\",\n          });\n          break;\n        case \"房间公告\":\n          this.$emit(\"closeRoomFit\");\n          if (this.$store.state.roomType == \"live\") {\n            this.$refs.Notice.setPopup({\n              isShow: true,\n              value: this.$RCLiveRoomLib.im._roomNotice\n                ? this.$RCLiveRoomLib.im._roomNotice\n                : \"欢迎来到 \" + this.$RCLiveRoomLib.roomInfo[\"roomName\"],\n            });\n          } else {\n            this.$refs.Notice.setPopup({\n              isShow: true,\n              value: this.$RCVoiceRoomLib.roomInfo[\"extra\"]\n                ? this.$RCVoiceRoomLib.roomInfo[\"extra\"]\n                : \"欢迎来到 \" + this.$RCVoiceRoomLib.roomInfo[\"roomName\"],\n            });\n          }\n          break;\n        case \"房间背景\":\n          this.$emit(\"closeRoomFit\");\n          this.$emit(\"openChangeBack\");\n          break;\n        case \"自由上麦\":\n          this.$emit(\"closeRoomFit\");\n          if (this.$store.state.roomType == \"live\") {\n            await this.$RCLiveRoomLib.setRoomInfo({\n              ...this.$RCLiveRoomLib.roomInfo,\n              isFreeEnterSeat: true,\n            });\n            this.$store.dispatch(\"showToast\", {\n              value: \"融云 RTC：当前观众可自由上麦\",\n            });\n            //直播逻辑\n\n            this.$RCLiveRoomLib.updateKeyValue({\n              key: \"ROOM_INFO_PRE_FreeEnterSeat\",\n              value: 1,\n            });\n          } else {\n            await this.$RCVoiceRoomLib.setRoomInfo({\n              ...this.$RCVoiceRoomLib.roomInfo,\n              isFreeEnterSeat: true,\n            });\n            this.$store.dispatch(\"showToast\", {\n              value: \"融云 RTC：当前观众可自由上麦\",\n            });\n          }\n          this.$store.state.isFreeEnterSeat = true;\n          break;\n        case \"申请上麦\":\n          this.$emit(\"closeRoomFit\");\n          if (this.$store.state.roomType == \"live\") {\n            await this.$RCLiveRoomLib.setRoomInfo({\n              ...this.$RCLiveRoomLib.roomInfo,\n              isFreeEnterSeat: false,\n            });\n            this.$store.dispatch(\"showToast\", {\n              value: \"融云 RTC：当前观众上麦上麦要申请\",\n            });\n            //直播逻辑\n            this.$RCLiveRoomLib.updateKeyValue({\n              key: \"ROOM_INFO_PRE_FreeEnterSeat\",\n              value: 0,\n            });\n          } else {\n            await this.$RCVoiceRoomLib.setRoomInfo({\n              ...this.$RCVoiceRoomLib.roomInfo,\n              isFreeEnterSeat: false,\n            });\n            this.$store.dispatch(\"showToast\", {\n              value: \"融云 RTC：当前观众上麦上麦要申请\",\n            });\n            //直播逻辑\n          }\n          this.$store.state.isFreeEnterSeat = false;\n          break;\n        case \"全麦锁麦\":\n          try {\n            this.$emit(\"closeRoomFit\");\n            this.$RCVoiceRoomLib\n              .setRoomInfo({\n                ...this.$RCVoiceRoomLib.roomInfo,\n                isMuteAll: true,\n              })\n              .then(() => {\n                // console.log(\"setRoomInfo\", this.$RCVoiceRoomLib);\n              });\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n              this.$store.dispatch(\"showToast\", {\n                value: \"融云 RTC:全部麦位已静音\",\n              });\n            }, 50);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"全麦锁麦失败\",\n            });\n\n            console.log(error);\n          }\n\n          break;\n        case \"解锁全麦\":\n          this.$emit(\"closeRoomFit\");\n          try {\n            await this.$RCVoiceRoomLib.setRoomInfo({\n              ...this.$RCVoiceRoomLib.roomInfo,\n              isMuteAll: false,\n            });\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n              this.$store.dispatch(\"showToast\", {\n                value: \"融云 RTC:已解锁全麦\",\n              });\n            }, 50);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"解锁全麦失败\",\n            });\n            console.log(error);\n          }\n\n          break;\n        case \"全麦锁座\":\n          this.$emit(\"closeRoomFit\");\n          try {\n            await this.$RCVoiceRoomLib.setRoomInfo({\n              ...this.$RCVoiceRoomLib.roomInfo,\n              isLockAll: true,\n            });\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n              this.$store.dispatch(\"showToast\", {\n                value: \"融云 RTC：全部座位已锁定\",\n              });\n            }, 50);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"全麦锁座失败\",\n            });\n            console.log(error);\n          }\n\n          break;\n        case \"解锁全座\":\n          this.$emit(\"closeRoomFit\");\n          try {\n            await this.$RCVoiceRoomLib.setRoomInfo({\n              ...this.$RCVoiceRoomLib.roomInfo,\n              isLockAll: false,\n            });\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n              this.$store.dispatch(\"showToast\", {\n                value: \"融云 RTC：已解锁全座\",\n              });\n            }, 50);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"解锁全座失败\",\n            });\n            console.log(error);\n          }\n\n          break;\n        case \"静音\":\n          await this.$RCVoiceRoomLib.muteAllRemoteStreams(true);\n          this.$store.dispatch(\"getMicrophone\", true);\n          this.$store.dispatch(\"showToast\", {\n            value: \"融云 RTC:扬声器已静音\",\n          });\n          this.$emit(\"closeRoomFit\");\n          break;\n        case \"取消静音\":\n          await this.$RCVoiceRoomLib.muteAllRemoteStreams(false);\n          this.$store.dispatch(\"getMicrophone\", false);\n          this.$store.dispatch(\"showToast\", {\n            value: \"融云 RTC：已取消静音\",\n          });\n          this.$emit(\"closeRoomFit\");\n          break;\n        case \"设置4个座位\":\n          this.$emit(\"closeRoomFit\");\n          try {\n            await this.$RCVoiceRoomLib.setRoomInfo({\n              ...this.$RCVoiceRoomLib.roomInfo,\n              seatCount: 5,\n            });\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n              seatcountChange = {\n                count: 4,\n              };\n              this.$RCVoiceRoomLib.im.messageUpdate(\n                \"RC:Chatroom:Seats\",\n                seatcountChange\n              );\n\n              this.$RCVoiceRoomLib.emit(\"MessageReceived\", {\n                //发本地\n                //模拟本地消息发送\n                messageType: \"RC:Chatroom:Seats\",\n                content: seatcountChange,\n              });\n            }, 200);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"设置4个座位失败\",\n            });\n            console.log(error);\n          }\n\n          break;\n        case \"设置8个座位\":\n          this.$emit(\"closeRoomFit\");\n          try {\n            await this.$RCVoiceRoomLib.setRoomInfo({\n              ...this.$RCVoiceRoomLib.roomInfo,\n              seatCount: 9,\n            });\n\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n              seatcountChange = {\n                count: 8,\n              };\n              this.$RCVoiceRoomLib.im.messageUpdate(\n                \"RC:Chatroom:Seats\",\n                seatcountChange\n              );\n\n              this.$RCVoiceRoomLib.emit(\"MessageReceived\", {\n                //发本地\n                //模拟本地消息发送\n                messageType: \"RC:Chatroom:Seats\",\n                content: seatcountChange,\n              });\n            }, 200);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"设置8个座位失败\",\n            });\n            console.log(error);\n          }\n\n          break;\n        case \"屏蔽词\":\n          this.$emit(\"closeRoomFit\");\n          this.$emit(\"openShieldingWords\");\n          break;\n        case \"抱下麦\":\n          this.$emit(\"closeUserClickSeizeSeat\");\n          this.$emit(\"closeAdminClickOther\");\n          try {\n            await this.$RCVoiceRoomLib.kickUserFromSeat(userInfo.userId);\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n            }, 200);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"抱下麦失败\",\n            });\n            console.log(error);\n          }\n\n          break;\n        case \"邀请上麦\":\n          await this.$RCVoiceRoomLib.pickUserToSeat(userInfo.userId);\n          this.$emit(\"closeUserClickSeizeSeat\");\n          this.$emit(\"closeAdminClickOther\");\n          break;\n        case \"关闭座位\":\n          try {\n            await this.$RCVoiceRoomLib.lockSeat(userInfo.index, true);\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n            }, 50);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"关闭座位失败\",\n            });\n            console.log(error);\n          }\n\n          this.$emit(\"closeUserClickSeizeSeat\");\n          break;\n        case \"开启座位\":\n          try {\n            await this.$RCVoiceRoomLib.lockSeat(userInfo.index, false);\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n            }, 50);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"开启座位失败\",\n            });\n            console.log(error);\n          }\n\n          this.$emit(\"closeUserClickSeizeSeat\");\n          break;\n        case \"取消禁麦\":\n          try {\n            await this.$RCVoiceRoomLib.muteSeat(userInfo.index, false);\n\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n            }, 200);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"取消禁麦失败\",\n            });\n            console.log(error);\n          }\n\n          this.$emit(\"closeUserClickSeizeSeat\");\n          break;\n        case \"座位禁麦\":\n          try {\n            await this.$RCVoiceRoomLib\n              .muteSeat(userInfo.index, true)\n              .then((res) => {\n                console.log(res);\n              })\n              .catch((err) => {\n                console.log(err);\n              });\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n            }, 200);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"座位禁麦失败\",\n            });\n            console.log(error);\n          }\n\n          this.$emit(\"closeUserClickSeizeSeat\");\n          break;\n        case \"踢出房间\":\n          await this.$RCVoiceRoomLib.kickUserFromRoom(userInfo.userId);\n          // console.log(userInfo);\n          txtMsgKickOut = {\n            targetName: userInfo.userName,\n            targetId: userInfo.userId,\n            userId: this.$RCVoiceRoomLib.im.userId,\n            userName: this.$store.state.userInfo.userName,\n          };\n          this.$RCVoiceRoomLib.im.messageUpdate(\n            \"RC:Chatroom:KickOut\",\n            txtMsgKickOut\n          );\n\n          this.$RCVoiceRoomLib.emit(\"MessageReceived\", {\n            //发本地\n            //模拟本地消息发送\n            messageType: \"RC:Chatroom:KickOut\",\n            content: txtMsgKickOut,\n          });\n          this.$emit(\"closeUserClickSeizeSeat\");\n          this.$emit(\"closeAdminClickOther\");\n          break;\n        default:\n      }\n    },\n    clickYes: function (value) {\n      request\n        .setRoomPrivate({\n          isPrivate: 1,\n          password: value,\n          roomId:\n            this.$store.state.roomType == \"live\"\n              ? this.$RCLiveRoomLib._roomidcli\n              : this.$RCVoiceRoomLib._roomidcli,\n        })\n        .then((res) => {\n          // console.log(res);\n          if (res.data.code == 10000) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"设置成功\",\n            });\n            console.log(\"this.$refs.PopuInput\", this.$refs.PopuInput);\n            this.$refs.PopuInput.onClose();\n            this.$store.dispatch(\"getroomPrivate\", {\n              isPrivate: 1,\n              password: value,\n            });\n          }\n        });\n    },\n    NoticeUpdate: function (notice) {\n      //修改公告上报\n      console.log(\"notice\", notice);\n      this.$RCLiveRoomLib.im._roomNotice = notice;\n      this.$RCLiveRoomLib.updateKeyValue({\n        key: \"ROOM_INFO_PRE_notice\",\n        value: notice,\n      });\n    },\n    clickTitleYes: function (value) {\n      // console.log(\"Title\", value);\n      request\n        .setRoomTitle({\n          name: value,\n          roomId:\n            this.$store.state.roomType == \"live\"\n              ? this.$RCLiveRoomLib._roomidcli\n              : this.$RCVoiceRoomLib._roomidcli,\n        })\n        .then((res) => {\n          console.log(res);\n          if (res.data.code == 10000) {\n            if (this.$store.state.roomType == \"live\") {\n              this.$RCLiveRoomLib.setRoomInfo({\n                ...this.$RCLiveRoomLib.roomInfo,\n                roomName: value,\n              });\n            } else {\n              this.$RCVoiceRoomLib.setRoomInfo({\n                ...this.$RCVoiceRoomLib.roomInfo,\n                roomName: value,\n              });\n            }\n            this.$store.dispatch(\"getroomTitle\", value);\n          } else {\n            this.$store.dispatch(\"showToast\", {\n              value: res.data.msg,\n            });\n          }\n        });\n    },\n    GetNotice: function (value) {\n      if (this.$store.state.roomType == \"live\") {\n        this.$RCLiveRoomLib.setRoomInfo({\n          ...this.$RCLiveRoomLib.roomInfo,\n          extra: value,\n        });\n        this.$RCLiveRoomLib.roomInfo.extra = value;\n        console.log(\"value\", value);\n        let txt = {\n          content: \"房间公告已更新!\",\n        };\n        this.$RCLiveRoomLib.im.messageUpdate(\"RC:TxtMsg\", txt);\n        this.$RCLiveRoomLib.emit(\"MessageReceived\", {\n          //发本地\n          //模拟本地消息发送\n          messageType: \"RC:TxtMsg\",\n          content: txt,\n        });\n      } else {\n        this.$RCVoiceRoomLib.setRoomInfo({\n          ...this.$RCVoiceRoomLib.roomInfo,\n          extra: value,\n        });\n        this.$RCVoiceRoomLib.roomInfo.extra = value;\n        console.log(\"value\", value);\n        let txt = {\n          content: \"房间公告已更新!\",\n        };\n        this.$RCVoiceRoomLib.im.messageUpdate(\"RC:TxtMsg\", txt);\n        this.$RCVoiceRoomLib.emit(\"MessageReceived\", {\n          //发本地\n          //模拟本地消息发送\n          messageType: \"RC:TxtMsg\",\n          content: txt,\n        });\n      }\n    },\n  },\n};\n</script>\n<style scoped>\n.functionKey {\n  display: inline-block;\n  width: 0.5rem;\n  height: 0.75rem;\n  position: relative;\n  background-repeat: no-repeat;\n  background-size: 0.5rem 0.5rem;\n  background-position: top;\n  text-align: center;\n}\n.functionKey-span {\n  display: inline-block;\n  height: 0.17rem;\n  font-size: 0.12rem;\n  line-height: 0.17rem;\n  margin-top: 0.58rem;\n}\n</style>\n"],"sourceRoot":"src/components/room"}]}