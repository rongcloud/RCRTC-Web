{"remainingRequest":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/babel-loader/lib/index.js!/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/src/components/room/ConnetWeat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/src/components/room/ConnetWeat.vue","mtime":1648438169925},{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/babel.config.js","mtime":1648104828534},{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ConnetWeat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA,OAAA,OAAA,MAAA,qBAAA;AACA,OAAA,UAAA,MAAA,kBAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,KADA;AAEA,MAAA,SAAA,EAAA,KAFA;AAGA,MAAA,UAAA,EAAA,OAHA;AAIA,MAAA,SAAA,EAAA,EAJA;AAKA,MAAA,cAAA,EAAA;AALA,KAAA;AAOA,GATA;AAUA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GAVA;AAaA,EAAA,KAAA,EAAA,EAbA;AAcA,EAAA,OAdA,qBAcA,CAAA,CAdA;AAeA,EAAA,OAfA,qBAeA,CAAA,CAfA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,eAAA;AAAA,qFAAA,iBAAA,IAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,KAAA,cAAA,CAAA,EAAA,IAAA,KAAA,cAAA,CAAA,EAAA,CAAA,QAAA,IAAA,MADA;AAAA;AAAA;AAAA;;AAEA,oBAAA,IAAA,EAAA;AACA,uBAAA,UAAA,GAAA,YAAA;AACA;;AAJA;AAAA,uBAKA,KAAA,cAAA,CAAA,qBAAA,EALA;;AAAA;AAKA,gBAAA,GALA;AAMA,qBAAA,MAAA,CAAA,QAAA,CAAA,uBAAA,EAAA,GAAA;AACA,gBAAA,OAAA,CACA,aADA,CACA;AACA,kBAAA,MAAA,EAAA,KAAA,cAAA,CAAA;AADA,iBADA,EAIA,IAJA,CAIA,UAAA,GAAA,EAAA;AACA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,MAAA,EAAA,GAAA;AACA,kBAAA,KAAA,CAAA,SAAA,GAAA,EAAA;AACA,sBAAA,QAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,sBAAA,QAAA,GAAA,KAAA,CAAA,cAAA,CAAA,YAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,SAAA,EAAA,QAAA;AACA,sBAAA,UAAA,GAAA,EAAA;AACA,sBAAA,oBAAA,GAAA,EAAA;;AACA,uBAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,QAAA,CAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA;AACA,oBAAA,UAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,qBAAA,QAAA,CAAA,CAAA,CAAA;AACA,oBAAA,oBAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,qBAAA,QAAA,CAAA,CAAA,CAAA;AACA;;AACA,sBAAA,GAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,yBAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,GAAA,CAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA;AACA,sBAAA,UAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,IAAA,IAAA;;AACA,sBAAA,KAAA,CAAA,SAAA,CAAA,IAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA;;AAEA,uBAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,QAAA,CAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA;AACA,wBAAA,QAAA,CAAA,CAAA,CAAA,IAAA,QAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,EAAA;AACA,6BAAA,oBAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA;AACA;AACA;;AACA,yBAAA,oBAAA,CAAA,KAAA,CAAA,cAAA,CAAA,EAAA,CAAA,QAAA,CAAA,CAAA;AACA,kBAAA,KAAA,CAAA,cAAA,GAAA,MAAA,CAAA,MAAA,CAAA,oBAAA,CAAA;;AACA,uBAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,CAAA,cAAA,CAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA;AACA,oBAAA,KAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,IAAA,IAAA;AACA;AACA,iBAlCA,EAmCA,KAnCA,CAmCA,UAAA,GAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,MAAA,EAAA,GAAA;AACA,iBArCA;AAPA;AAAA;;AAAA;AA8CA,oBAAA,IAAA,EAAA;AACA,uBAAA,UAAA,GAAA,YAAA;AACA;;AAhDA;AAAA,uBAiDA,KAAA,eAAA,CAAA,qBAAA,EAjDA;;AAAA;AAiDA,gBAAA,IAjDA;AAkDA,qBAAA,MAAA,CAAA,QAAA,CAAA,uBAAA,EAAA,IAAA;AACA,gBAAA,OAAA,CACA,aADA,CACA;AACA,kBAAA,MAAA,EAAA,KAAA,eAAA,CAAA;AADA,iBADA,EAIA,IAJA,CAIA,UAAA,GAAA,EAAA;AACA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,MAAA,EAAA,GAAA;AACA,kBAAA,KAAA,CAAA,SAAA,GAAA,EAAA;AACA,sBAAA,QAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,sBAAA,QAAA,GAAA,KAAA,CAAA,eAAA,CAAA,YAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,SAAA,EAAA,QAAA;AACA,sBAAA,UAAA,GAAA,EAAA;AACA,sBAAA,oBAAA,GAAA,EAAA;;AACA,uBAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,QAAA,CAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA;AACA,oBAAA,UAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,qBAAA,QAAA,CAAA,CAAA,CAAA;AACA,oBAAA,oBAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,qBAAA,QAAA,CAAA,CAAA,CAAA;AACA;;AACA,sBAAA,IAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,yBAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,IAAA,CAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA;AACA,sBAAA,UAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,IAAA,IAAA;;AACA,sBAAA,KAAA,CAAA,SAAA,CAAA,IAAA,CAAA,UAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA;;AAEA,uBAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,QAAA,CAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA;AACA,wBAAA,QAAA,CAAA,CAAA,CAAA,IAAA,QAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,EAAA;AACA,6BAAA,oBAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA;AACA;AACA;;AACA,yBAAA,oBAAA,CAAA,KAAA,CAAA,eAAA,CAAA,EAAA,CAAA,QAAA,CAAA,CAAA;AACA,kBAAA,KAAA,CAAA,cAAA,GAAA,MAAA,CAAA,MAAA,CAAA,oBAAA,CAAA;;AACA,uBAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,CAAA,cAAA,CAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA;AACA,oBAAA,KAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,IAAA,IAAA;AACA;AACA,iBAlCA,EAmCA,KAnCA,CAmCA,UAAA,GAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,MAAA,EAAA,GAAA;AACA,iBArCA;;AAnDA;AA2FA;AACA,qBAAA,MAAA,GAAA,IAAA;;AA5FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADA;AA+FA,IAAA,gBAAA,EAAA,4BAAA;AACA,WAAA,MAAA,GAAA,KAAA;AACA,KAjGA;AAkGA,IAAA,iBAAA;AAAA,uFAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,qBAAA,MAAA,GAAA,KAAA;AACA,gBAAA,IAFA,GAEA,IAFA;AAGA,gBAAA,UAAA,uEAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAGA,IAAA,CAAA,cAAA,CAAA,EAAA,IACA,IAAA,CAAA,cAAA,CAAA,EAAA,CAAA,QAAA,IAAA,MAJA;AAAA;AAAA;AAAA;;AAAA;AAAA,iCAMA,IAAA,CAAA,cAAA,CAAA,qBAAA,EANA;;AAAA;AAMA,0BAAA,GANA;AAAA;AAAA;;AAAA;AAAA;AAAA,iCAQA,IAAA,CAAA,eAAA,CAAA,qBAAA,EARA;;AAAA;AAQA,0BAAA,GARA;;AAAA;AAUA,0BAAA,IAAA,CAAA,MAAA,CAAA,QAAA,CAAA,uBAAA,EAAA,GAAA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAA,IAWA,GAXA,CAAA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAlGA;AAkHA,IAAA,kBAAA,EAAA,8BAAA;AACA,WAAA,UAAA,GAAA,OAAA;AACA,KApHA;AAqHA,IAAA,WAAA,EAAA,qBAAA,GAAA,EAAA,KAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,KAAA;AACA;AAvHA;AAhBA,CAAA","sourcesContent":["<template>\n  <div id=\"ConnetWheat\">\n    <el-drawer\n      class=\"ConnetWheat-drawer\"\n      :visible.sync=\"drawer\"\n      :direction=\"direction\"\n      :show-close=\"false\"\n      :withHeader=\"false\"\n      @close=\"OncloseConnetWheat\"\n      size=\"4.47rem\"\n    >\n      <el-tabs\n        v-model=\"activeName\"\n        @tab-click=\"handleClick\"\n        class=\"ConnetWheat-tabs\"\n      >\n        <el-tab-pane class=\"tabs-apply\" label=\"申请列表\" name=\"apply\">\n          <div v-if=\"userapply.length > 0\">\n            <div class=\"apply-list\" v-for=\"(item, i) in userapply\" :key=\"i\">\n              <UserColumn\n                :item=\"item\"\n                :apply=\"true\"\n                @closeConnetWheat=\"closeConnetWheat\"\n                @updateConnetWheat=\"updateConnetWheat\"\n              />\n            </div>\n          </div>\n          <div v-else class=\"emptyImg\">暂无用户</div>\n        </el-tab-pane>\n        <el-tab-pane class=\"tabs-invitation\" label=\"邀请连麦\" name=\"invitation\">\n          <div v-if=\"userinvitation.length > 0\">\n            <div\n              class=\"invitation-list\"\n              v-for=\"(item, i) in userinvitation\"\n              :key=\"i\"\n            >\n              <UserColumn\n                :item=\"item\"\n                @closeConnetWheat=\"closeConnetWheat\"\n                @updateConnetWheat=\"updateConnetWheat\"\n              />\n            </div>\n          </div>\n          <div v-else class=\"emptyImg\">暂无用户</div>\n        </el-tab-pane>\n      </el-tabs>\n    </el-drawer>\n  </div>\n</template>\n<script>\nimport request from \"../../request/index\";\nimport UserColumn from \"./UserColumn.vue\";\nexport default {\n  data() {\n    return {\n      drawer: false,\n      direction: \"btt\",\n      activeName: \"apply\",\n      userapply: [],\n      userinvitation: [],\n    };\n  },\n  components: {\n    UserColumn,\n  },\n  watch: {},\n  created() {},\n  mounted() {},\n  methods: {\n    openConnetWheat: async function (item) {\n      if (this.$RCLiveRoomLib.im && this.$RCLiveRoomLib.im.roomType == \"live\") {\n        if (item) {\n          this.activeName = \"invitation\";\n        }\n        const arr = await this.$RCLiveRoomLib.getRequestSeatUserIds();\n        this.$store.dispatch(\"getRequestSeatUserIds\", arr);\n        request\n          .roomuserinfor({\n            roomId: this.$RCLiveRoomLib._roomidcli,\n          })\n          .then((res) => {\n            //   console.log(res);\n console.log(\"用户列表\",res);\n            this.userapply = [];\n            const userList = res.data.data;\n            const seatList = this.$RCLiveRoomLib.seatInfoList;\n            console.log(\"当前麦位上的人\", seatList);\n            const userObject = {};\n            const userinvitationObject = {};\n            for (let i = 0; i < userList.length; i += 1) {\n              userObject[userList[i].userId] = { ...userList[i] };\n              userinvitationObject[userList[i].userId] = { ...userList[i] };\n            }\n            if (arr.length > 0) {\n              for (let l = 0; l < arr.length; l += 1) {\n                userObject[arr[l]][\"key\"] = \"接受\";\n                this.userapply.push(userObject[arr[l]]);\n              }\n            }\n\n            for (let o = 0; o < seatList.length; o += 1) {\n              if (seatList[o] && seatList[o][\"userId\"]) {\n                delete userinvitationObject[seatList[o][\"userId\"]];\n              }\n            }\n            delete userinvitationObject[this.$RCLiveRoomLib.im[\"userId\"]];\n            this.userinvitation = Object.values(userinvitationObject);\n            for (let u = 0; u < this.userinvitation.length; u += 1) {\n              this.userinvitation[u][\"key\"] = \"邀请\";\n            }\n          })\n          .catch((err) => {\n            console.log(\"err:\", err);\n          });\n      } else {\n        if (item) {\n          this.activeName = \"invitation\";\n        }\n        const arr = await this.$RCVoiceRoomLib.getRequestSeatUserIds();\n        this.$store.dispatch(\"getRequestSeatUserIds\", arr);\n        request\n          .roomuserinfor({\n            roomId: this.$RCVoiceRoomLib._roomidcli,\n          })\n          .then((res) => {\n            //   console.log(res);\n            console.log(\"用户列表\",res);\n            this.userapply = [];\n            const userList = res.data.data;\n            const seatList = this.$RCVoiceRoomLib.seatInfoList;\n            console.log(\"当前麦位上的人\", seatList);\n            const userObject = {};\n            const userinvitationObject = {};\n            for (let i = 0; i < userList.length; i += 1) {\n              userObject[userList[i].userId] = { ...userList[i] };\n              userinvitationObject[userList[i].userId] = { ...userList[i] };\n            }\n            if (arr.length > 0) {\n              for (let l = 0; l < arr.length; l += 1) {\n                userObject[arr[l]][\"key\"] = \"接受\";\n                this.userapply.push(userObject[arr[l]]);\n              }\n            }\n\n            for (let o = 0; o < seatList.length; o += 1) {\n              if (seatList[o] && seatList[o][\"userId\"]) {\n                delete userinvitationObject[seatList[o][\"userId\"]];\n              }\n            }\n            delete userinvitationObject[this.$RCVoiceRoomLib.im[\"userId\"]];\n            this.userinvitation = Object.values(userinvitationObject);\n            for (let u = 0; u < this.userinvitation.length; u += 1) {\n              this.userinvitation[u][\"key\"] = \"邀请\";\n            }\n          })\n          .catch((err) => {\n            console.log(\"err:\", err);\n          });\n      }\n\n      // console.log(arr);\n      this.drawer = true;\n    },\n    closeConnetWheat: function () {\n      this.drawer = false;\n    },\n    updateConnetWheat: async function () {\n      this.drawer = false;\n      let that = this;\n      setTimeout(async function () {\n        let arr;\n        if (\n          that.$RCLiveRoomLib.im &&\n          that.$RCLiveRoomLib.im.roomType == \"live\"\n        ) {\n          arr = await that.$RCLiveRoomLib.getRequestSeatUserIds();\n        } else {\n          arr = await that.$RCVoiceRoomLib.getRequestSeatUserIds();\n        }\n        that.$store.dispatch(\"getRequestSeatUserIds\", arr);\n      }, 500);\n    },\n    OncloseConnetWheat: function () {\n      this.activeName = \"apply\";\n    },\n    handleClick: function (tab, event) {\n      console.log(tab, event);\n    },\n  },\n};\n</script>\n<style>\n.ConnetWheat {\n  font-size: 0.16rem;\n  text-align: center;\n}\n\n.ConnetWheat-drawer .el-drawer {\n  border-top-left-radius: 0.3rem;\n  border-top-right-radius: 0.3rem;\n  background-color: rgba(92, 80, 149, 1);\n  color: #fff;\n  text-align: center;\n}\n\n.ConnetWheat-drawer .el-tabs__header {\n  height: 0.63rem;\n  margin: 0rem;\n  position: relative;\n}\n\n.ConnetWheat-drawer .el-tabs__nav-wrap {\n  height: 0.63rem;\n}\n\n.ConnetWheat-drawer .el-tabs__nav-wrap::after {\n  background-color: rgba(92, 80, 149, 1);\n}\n\n.ConnetWheat-drawer .el-tabs__nav-scroll {\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  height: 0.63rem;\n}\n\n.ConnetWheat-drawer .el-tabs__item {\n  padding: 0 0.6rem;\n  font-size: 0.17rem;\n}\n\n.ConnetWheat-drawer .el-tabs__item:hover {\n  color: #ef499a;\n}\n\n.ConnetWheat-drawer .el-tabs__item.is-active {\n  color: #ef499a;\n}\n\n.ConnetWheat-drawer .el-tabs__active-bar {\n  background-color: #ef499a;\n  width: 0.68rem !important;\n}\n\n.ConnetWheat-drawer .el-tabs__item {\n  color: #fff;\n}\n\n.ConnetWheat-tabs {\n  overflow: hidden;\n  width: calc(375px - 0.15rem);\n}\n\n.ConnetWheat-drawer .el-tabs__content {\n  height: 3.84rem;\n  overflow: hidden;\n  overflow-y: scroll;\n  width: 375px;\n  min-width: none;\n}\n\n.ConnetWheat-drawer .tabs-apply {\n  width: 375px;\n  min-width: none;\n}\n\n.apply-list {\n  width: 100%;\n  min-width: none;\n}\n\n.invitation-list {\n  width: 100%;\n  height: 0.64rem;\n}\n\n.emptyImg {\n  width: 100%;\n  height: 3.84rem;\n  background-image: url(../../assets/wheat/pleaseCreateRoom.png);\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: 1.56rem 1.65rem;\n  color: rgba(225, 225, 225, 0.6);\n  line-height: 5.4rem;\n}\n</style>\n"],"sourceRoot":"src/components/room"}]}