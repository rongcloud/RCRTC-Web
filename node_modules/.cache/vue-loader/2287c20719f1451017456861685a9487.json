{"remainingRequest":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/src/pages/room/index.vue?vue&type=style&index=0&id=4fc5d7ae&scoped=true&lang=css&","dependencies":[{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/src/pages/room/index.vue","mtime":1648104828602},{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCB1cmwoIi4vaW5kZXguY3NzIik7Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappingsfA","file":"index.vue","sourceRoot":"src/pages/room","sourcesContent":["<template>\n  <div class=\"landing\">\n    <div class=\"miniWindow\" @click=\"miniBack\" v-if=\"isInRoom\">\n      <div class=\"miniClose\" @click.stop=\"miniClose\"></div>\n      <video\n        class=\"videocontainer\"\n        width=\" 93px\"\n        height=\"166px\"\n        ref=\"video\"\n      ></video>\n    </div>\n    <ToolBar @BarRightCallback=\"BarRightCallback\" :title=\"title\" />\n    <CallRoom />\n    <div class=\"creat-room\" @click=\"creatRoom\"></div>\n    <el-drawer\n      :visible.sync=\"drawer\"\n      :direction=\"direction\"\n      :append-to-body=\"true\"\n      class=\"creat-drawer\"\n      :size=\"size\"\n      @closed=\"drawerClosed\"\n    >\n      <div class=\"creat-room-table\">\n        <el-upload\n          class=\"avatar-uploader\"\n          :show-file-list=\"false\"\n          :action=\"this.$store.state.uploadAddress\"\n          :headers=\"{\n            authorization: this.$store.state.userInfo.authorization,\n            BusinessToken: btoken,\n          }\"\n          :on-success=\"handleAvatarSuccess\"\n          :before-upload=\"beforeAvatarUpload\"\n        >\n          <div\n            v-if=\"imgBackground\"\n            :style=\"{ backgroundImage: 'url(' + imgBackground + ')' }\"\n            class=\"avatar\"\n          ></div>\n          <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n        </el-upload>\n        <div class=\"room-set-img-title\">选择封面</div>\n        <el-input\n          class=\"room-title-input\"\n          v-model=\"updateObj.name\"\n          :maxlength=\"10\"\n          placeholder=\"设置房间标题\"\n        ></el-input>\n        <div class=\"creat-room-select-title\">设置背景</div>\n        <div class=\"room-title-img-select\">\n          <div\n            class=\"selectRadio\"\n            v-for=\"(item, i) in imgData\"\n            @click=\"selectImage(item)\"\n            :key=\"i\"\n            :style=\"\n              i !== 3\n                ? {\n                    backgroundImage: 'url(' + item.url + ')',\n                    marginRight: '0.17rem',\n                  }\n                : {\n                    backgroundImage: 'url(' + item.url + ')',\n                  }\n            \"\n          >\n            <div\n              class=\"selectRadioImg\"\n              :style=\"\n                item.select\n                  ? {\n                      backgroundImage: 'url(' + imgSelect + ')',\n                      backgroundColor: '#E92B88',\n                    }\n                  : ''\n              \"\n            ></div>\n            <div\n              v-if=\"item.url.substring(item.url.length - 3) == 'gif'\"\n              class=\"selectRadioGIF\"\n            >\n              GIF\n            </div>\n          </div>\n        </div>\n        <div class=\"creat-room-select-title\">房间是否公开</div>\n        <div class=\"creat-room-select-open\">\n          <div\n            class=\"creat-room-select-openSelect\"\n            v-for=\"item in openSelect\"\n            :key=\"item.id\"\n            @click=\"selectOpen(item)\"\n          >\n            <div class=\"creat-room-select-get-head\">\n              <span\n                class=\"creat-room-select-get-head-spot\"\n                :style=\"\n                  item.select\n                    ? {\n                        backgroundColor: '#E92B88',\n                      }\n                    : ''\n                \"\n              ></span>\n            </div>\n            <div class=\"creat-room-select-get-foot\">{{ item.value }}</div>\n          </div>\n        </div>\n        <div class=\"creat-room-button\" @click=\"updateRoomObj\"></div>\n      </div>\n    </el-drawer>\n    <PopupInput ref=\"PopupInput\" @clickYes=\"submitValue\" />\n    <ChoiceBox ref=\"ChoiceBox\" @clickYes=\"cliYes\" />\n  </div>\n</template>\n\n<script>\nimport CallRoom from \"./callRoom/index.vue\";\nimport PopupInput from \"../../components/PopupInput.vue\";\nimport ToolBar from \"../../components/ToolBar.vue\";\nimport ChoiceBox from \"../../components/ChoiceBox.vue\";\nimport request from \"../../request/index\";\nimport { coverPhoto } from \"./coverPhoto.js\";\nimport { GetQueryString } from \"../../utils/utils\";\nimport { btoken } from \"../../request/BusinessToken\";\n\nexport default {\n  name: \"RoomTab\",\n  data: function () {\n    return {\n      updateObj: {\n        name: \"\",\n        themePictureUrl: \"\",\n        isPrivate: 1,\n        password: \"\",\n        backgroundUrl: \"\",\n        kv: [],\n      },\n      tabStretch: true,\n      activeName: \"first\",\n      authorization: null,\n      dataList: [],\n      drawer: false,\n      direction: \"btt\",\n      size: \"88%\",\n      imgStyle: \"\",\n      imgData: [],\n      selectRadio: \"1\",\n      btoken: btoken,\n      openSelect: [\n        {\n          select: true,\n          value: \"私密\",\n          id: \"1\",\n        },\n        {\n          select: false,\n          value: \"公开\",\n          id: \"2\",\n        },\n      ],\n      // eslint-disable-next-line no-undef\n      imgSelect: require(\"../../assets/check-circle-true-icon.png\"),\n      // eslint-disable-next-line no-undef\n      imgBackground: \"\",\n      // updateImgUrl: \"/api/file/upload\",\n      roomType: \"\", //房间类型\n      isInRoom: false, //在房间内\n      title: \"语聊房\",\n    };\n  },\n  components: {\n    CallRoom,\n    PopupInput,\n    ToolBar,\n    ChoiceBox,\n  },\n  watch: {\n    imgStyle: function (newVal) {\n      //   console.log(newVal);\n      this.$nextTick(() => {\n        document.getElementsByClassName(\"el-drawer\")[0].style.backgroundImage =\n          \"url(\" + newVal + \")\";\n        this.updateObj.backgroundUrl = newVal;\n      });\n    },\n  },\n  methods: {\n    //创建房间\n    creatRoom: function () {\n      console.log(\"ct\");\n      console.log(this.$RCLiveRoomLib.im);\n      if (this.$data.roomType == \"liveRoom\") {\n        if (\n          GetQueryString(\"roomType\") &&\n          GetQueryString(\"roomType\") == \"liveRoom\"\n        ) {\n          //是否创建直播房间 先查询 userCheck\n          request\n            .checkUser(this.$store.state.userInfo.userId)\n            .then(async (res) => {\n              console.log(\"checkresout\", res);\n              if (res && res.data && res.data.data && res.data.data.roomId) {\n                console.log(\"用户有创建房间\");\n\n                this.$confirm(\"存在已创建的房间是否加入?\", \"提示\", {\n                  confirmButtonText: \"确定\",\n                  cancelButtonText: \"取消\",\n                  type: \"warning\",\n                  center: true,\n                })\n                  .then(() => {\n                    this.$router.push(\n                      \"/live?isAnchor=true&&roomId=\" + res.data.data.roomId\n                    );\n                  })\n                  .catch(() => {\n                    request.deleteRoom({\n                      roomId: res.data.data.roomId,\n                    });\n                  });\n              } else {\n                console.log(\n                  \"用户没有创建房间  创建新房间\",\n                  this.$store.state.userInfo\n                );\n                this.$router.push(\"/live?isAnchor=true\");\n              }\n            });\n        } else {\n          this.drawer = true;\n          this.imgData = this.$store.state.imgList;\n          this.imgStyle = this.$store.state.imgList[0].url || \"\";\n          this.updateObj.themePictureUrl =\n            coverPhoto[Math.floor(Math.random() * 6)];\n          this.imgBackground = coverPhoto[Math.floor(Math.random() * 6)];\n          this.drawer = true;\n        }\n      } else {\n        request.getUserCheck().then((res) => {\n          if (res.data.code == 10000) {\n            this.imgData = this.$store.state.imgList;\n            this.imgStyle = this.$store.state.imgList[0].url || \"\";\n            this.updateObj.themePictureUrl =\n              coverPhoto[Math.floor(Math.random() * 6)];\n            this.imgBackground = coverPhoto[Math.floor(Math.random() * 6)];\n            this.drawer = true;\n          } else if (res.data.code == 30016) {\n            this.$refs.ChoiceBox.setPopup({\n              value: \"您已创建过房间,是否直接进入\",\n              roomId: res.data.data.roomId,\n            });\n          }\n        });\n      }\n    },\n\n    //选择背景图片\n    selectImage: function (item) {\n      this.imgStyle = item.url;\n      for (let i = 0; i < this.imgData.length; i += 1) {\n        if (this.imgData[i].url === item.url) {\n          this.imgData[i].select = true;\n        } else {\n          this.imgData[i].select = false;\n        }\n      }\n    },\n\n    //是否公开点选\n    selectOpen: function (item) {\n      if (item.id == \"1\") {\n        this.updateObj.isPrivate = 1;\n      } else {\n        this.updateObj.isPrivate = 0;\n      }\n      for (let i = 0; i < this.openSelect.length; i += 1) {\n        if (this.openSelect[i].id === item.id) {\n          this.openSelect[i].select = true;\n        } else {\n          this.openSelect[i].select = false;\n        }\n      }\n    },\n\n    //上传头像图片成功之后\n    handleAvatarSuccess(res, file) {\n      // console.log(res, file);\n      // this.updateObj.themePictureUrl = `${this.$store.state.defaultAddress}${res.data}`;\n      this.updateObj.themePictureUrl = `https://rcrtc-api.rongcloud.net/file/show?path=${res.data}`;\n      this.imgBackground = URL.createObjectURL(file.raw);\n    },\n\n    //上传头像图片之前\n    beforeAvatarUpload(file) {\n      //   console.log(file);\n      const isJPG = file.type === \"image/jpeg\" || \"image/png\";\n      const isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isJPG) {\n        this.$message.error(\"上传头像图片只能是 JPG、png 格式!\");\n      }\n      if (!isLt2M) {\n        this.$message.error(\"上传头像图片大小不能超过 2MB!\");\n      }\n      return isJPG && isLt2M;\n    },\n\n    //提交\n    updateRoomObj: function () {\n      if (this.updateObj.name == \"\") {\n        this.$message.error(\"融云RTC:请填写房间名\");\n        return;\n      }\n      if (this.updateObj.isPrivate == 1 && !this.updateObj.password) {\n        this.$refs.PopupInput.setPopup({\n          title: \"请输入四位数字密码\",\n          value: \"\",\n          placeholder: \"请输入四位数字密码\",\n          type: \"number\",\n        });\n      } else {\n        // console.log(this.updateObj);\n        this.createAndJoinRoom();\n      }\n    },\n\n    //提示点击确定\n    cliYes: async function (roomId) {\n      try {\n        await this.$RCVoiceRoomLib.joinRoom(roomId);\n        setTimeout(() => {\n          this.$router.push(\"/room/house\");\n        }, 50);\n      } catch (err) {\n        console.log(\"加入语聊房失败!\");\n      }\n    },\n\n    //关闭drawer\n    drawerClosed: function () {\n      // console.log(\"关闭drawer\");\n      for (let i = 0; i < this.imgData.length; i += 1) {\n        if (i === 0) {\n          this.imgData[i].select = true;\n        } else {\n          this.imgData[i].select = false;\n        }\n      }\n      for (let i = 0; i < this.openSelect.length; i += 1) {\n        if (i === 0) {\n          this.openSelect[i].select = true;\n        } else {\n          this.openSelect[i].select = false;\n        }\n      }\n    },\n\n    //记录密码\n    submitValue: function (item) {\n      this.updateObj.password = item;\n      this.createAndJoinRoom();\n    },\n\n    //点击右上角\n    BarRightCallback: function () {\n      this.$store.dispatch(\"showToast\", {\n        value: \"功能待开放\",\n      });\n    },\n    //小窗关闭\n    miniClose: function (e) {\n      console.log(\"miniclose\", e);\n      console.log(this.$RCLiveRoomLib._roomidcli);\n      if (\n        this.$RCLiveRoomLib._roomidcli &&\n        this.$RCLiveRoomLib._roomidcli.length\n      ) {\n        console.log(this.$RCLiveRoomLib._roomidcli);\n        this.$RCLiveRoomLib.leaveRoom(this.$RCLiveRoomLib._roomidcli);\n        this.$data.isInRoom = false;\n      }\n    },\n    miniBack: function () {\n      console.log(\"miniback\");\n      this.$router.push(\"/live?roomid=\" + this.$RCLiveRoomLib._roomidcli);\n      // console.log(this.$refs);\n    },\n    //创建并加入房间\n    createAndJoinRoom: function () {\n      request\n        .creatRoom({\n          ...this.updateObj,\n        })\n        .then(async (res) => {\n          console.log(res);\n          switch (res.data.code) {\n            case 10000:\n              await this.$RCVoiceRoomLib.createAndJoinRoom({\n                roomId: res.data.data.roomId,\n                roomName: res.data.data.roomName,\n                seatCount: 9,\n              });\n              this.drawer = false;\n              setTimeout(() => {\n                this.$router.push(\"/room/house\");\n              }, 500);\n              break;\n            default:\n              this.$store.dispatch(\"showToast\", {\n                value: res.data.msg,\n              });\n          }\n        })\n        .catch((err) => {\n          console.log(\"err:\", err);\n        });\n    },\n  },\n  created() {\n    console.log(\n      \"==++++++++++++++++++=================>\",\n      GetQueryString(\"roomType\")\n    );\n    if (GetQueryString(\"roomType\")) {\n      if (GetQueryString(\"roomType\") == \"liveRoom\") {\n        this.$data.roomType = \"liveRoom\";\n        this.$data.title = \"直播间\";\n      }\n    }\n    //小窗逻辑\n    if (\n      this.$RCLiveRoomLib._roomidcli &&\n      this.$RCLiveRoomLib._roomidcli.length\n    ) {\n      console.log(\"当前\", this.$RCLiveRoomLib._roomidcli);\n      this.$data.isInRoom = true;\n      this.$RCLiveRoomLib.rtc.body.videoNode = this.$refs.video;\n    }\n  },\n  mounted() {\n    let reqObj = {\n      page: 1,\n      size: 10,\n    };\n\n    if (this.$data.roomType == \"liveRoom\") {\n      reqObj.type = 3;\n    }\n    request\n      .roomList(reqObj)\n      .then((response) => {\n        this.$store.dispatch(\"changesImgList\", response.data.data.images);\n        for (var i = 0; i < response.data.data.rooms.length; i++) {\n          if (\n            response.data.data.rooms[i].createUser.userId ==\n              this.$store.state.userInfo.userId &&\n            reqObj.type == 3\n          ) {\n            //如果是直播间且有自己创建的房间 退出该房间\n            console.log(\"已经有自己创建的房间需要删除一下\");\n            //  this.$router.go(0);\n            request.deleteRoom({\n              roomId: response.data.data.rooms[i].roomId,\n            });\n            response.data.data.rooms.splice(i, 1);\n          }\n        }\n        this.$store.dispatch(\"changesRoomsList\", response.data.data.rooms);\n      })\n      .catch((err) => {\n        console.error(\"请求失败\", err);\n      });\n    //小窗逻辑\n    console.log(\"当前sdk状态\", this.$RCLiveRoomLib);\n    console.log(\"vidioNode\", this.$refs);\n    if (\n      this.$RCLiveRoomLib._roomidcli &&\n      this.$RCLiveRoomLib._roomidcli.length\n    ) {\n      console.log(\"getExist\");\n      this.$RCLiveRoomLib.rtc.body.videoNode = this.$refs.video;\n      this.$RCLiveRoomLib.getExist();\n    }\n\n    window.addEventListener(\"load\", () => {\n      if (this.$route.name != \"login\") {\n        this.$router.replace(\"/login\");\n      }\n    });\n  },\n  beforeRouteLeave(to, from, next) {\n    if (to.name == \"home\") {\n      if (this.$data.roomType == \"liveRoom\") {\n        this.$RCLiveRoomLib.im.body.disconnect().then(() => {\n          console.log(\"成功断开\");\n        });\n      } else {\n        this.$store.dispatch(\"getOwerDisconnet\", true).then(() => {\n          this.$RCVoiceRoomLib.im.body.disconnect().then(() => {\n            console.log(\"成功断开\");\n          });\n        });\n      }\n    }\n    next();\n  },\n};\n</script>\n<style scoped>\n@import url(\"./index.css\");\n</style>"]}]}