{"remainingRequest":"/Users/libin/Desktop/Gwork/rcrtc-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/libin/Desktop/Gwork/rcrtc-web/src/components/room/FunctionKey.vue?vue&type=style&index=0&id=3265aaa3&scoped=true&lang=css&","dependencies":[{"path":"/Users/libin/Desktop/Gwork/rcrtc-web/src/components/room/FunctionKey.vue","mtime":1648176532423},{"path":"/Users/libin/Desktop/Gwork/rcrtc-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/libin/Desktop/Gwork/rcrtc-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/libin/Desktop/Gwork/rcrtc-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/libin/Desktop/Gwork/rcrtc-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/libin/Desktop/Gwork/rcrtc-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZnVuY3Rpb25LZXkgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICB3aWR0aDogMC41cmVtOwogIGhlaWdodDogMC43NXJlbTsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsKICBiYWNrZ3JvdW5kLXNpemU6IDAuNXJlbSAwLjVyZW07CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQouZnVuY3Rpb25LZXktc3BhbiB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIGhlaWdodDogMC4xN3JlbTsKICBmb250LXNpemU6IDAuMTJyZW07CiAgbGluZS1oZWlnaHQ6IDAuMTdyZW07CiAgbWFyZ2luLXRvcDogMC41OHJlbTsKfQo="},{"version":3,"sources":["FunctionKey.vue"],"names":[],"mappingsknBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FunctionKey.vue","sourceRoot":"src/components/room","sourcesContent":["<template>\n  <span\n    class=\"functionKey\"\n    @click=\"clickFunctionKey(item, userInfo)\"\n    :style=\"{\n      backgroundImage: item.img,\n    }\"\n  >\n    <span class=\"functionKey-span\">{{ item.value }}</span>\n    <PopuInput\n      ref=\"PopuInput\"\n      @clickYes=\"clickYes\"\n      @clickTitleYes=\"clickTitleYes\"\n    />\n    <Notice ref=\"Notice\" @clickYes=\"GetNotice\" @NoticeUpdate=\"NoticeUpdate\" />\n  </span>\n</template>\n<script>\nimport request from \"../../request/index\";\nimport PopuInput from \"../PopupInput.vue\";\nimport Notice from \"./Notice.vue\";\n\nexport default {\n  props: [\"item\", \"userInfo\"],\n  data() {\n    return {\n      type: \"\",\n      // eslint-disable-next-line no-undef\n      url: require(\"../../assets/roomicon/CloseRoom.png\"),\n    };\n  },\n  watch: {},\n  components: {\n    PopuInput,\n    Notice,\n  },\n  created() {},\n  mounted() {},\n  methods: {\n    clickFunctionKey: async function (item, userInfo) {\n      let txtMsgKickOut = null;\n      let seatcountChange = null;\n      switch (item.value) {\n        case \"关闭房间\":\n          try {\n            await this.$RCVoiceRoomLib\n              .leaveRoom(this.$RCVoiceRoomLib._roomidcli)\n              .then(async () => {\n                request\n                  .deleteRoom({\n                    roomId: this.$RCVoiceRoomLib._roomidcli,\n                  })\n                  .then(() => {\n                    this.$router.go(-1);\n                  })\n                  .catch((err) => {\n                    console.log(err);\n                  });\n              });\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"关闭房间失败\",\n            });\n            console.log(error);\n          }\n          break;\n        case \"离开房间\":\n          console.log(\"离开房间\");\n          if (this.$store.state.roomType == \"live\") {\n            try {\n              this.$RCLiveRoomLib.im.messageUpdate(\"RC:VRLRefreshMsg\", {\n                name: \"RCAudienceLeaveRoom\",\n                content: this.$RCLiveRoomLib.im.userId,\n              });\n              console.log(\"living\");\n              await this.$RCLiveRoomLib.leaveRoom(\n                this.$RCLiveRoomLib._roomidcli\n              );\n              console.log(\"living\", this.$RCLiveRoomLib._roomidcli);\n              this.$router.go(-1);\n            } catch (error) {\n              this.$store.dispatch(\"showToast\", {\n                value: \"离开房间失败\",\n              });\n              console.log(error);\n            }\n          } else {\n            try {\n              this.$RCVoiceRoomLib.im.messageUpdate(\"RC:VRLRefreshMsg\", {\n                name: \"RCAudienceLeaveRoom\",\n                content: this.$RCVoiceRoomLib.im.userId,\n              });\n              await this.$RCVoiceRoomLib.leaveRoom(\n                this.$RCVoiceRoomLib._roomidcli\n              );\n              this.$router.go(-1);\n            } catch (error) {\n              this.$store.dispatch(\"showToast\", {\n                value: \"离开房间失败\",\n              });\n              console.log(error);\n            }\n          }\n\n          break;\n        case \"收起房间\":\n          console.log(\"收起\");\n          this.$router.go(-1);\n          break;\n        case \"返回列表\":\n          this.$router.go(-1);\n          break;\n        case \"房间上锁\":\n          this.$emit(\"closeRoomFit\");\n          this.$refs.PopuInput.setPopup({\n            type: \"number\",\n            title: \"请输入 4 位数字密码\",\n            placeholder: \"请输入 4 位数字密码\",\n          });\n          break;\n        case \"房间解锁\":\n          this.$emit(\"closeRoomFit\");\n          request\n            .setRoomPrivate({\n              isPrivate: 0,\n              password: \"\",\n              roomId:\n                this.$store.state.roomType == \"live\"\n                  ? this.$RCLiveRoomLib._roomidcli\n                  : this.$RCVoiceRoomLib._roomidcli,\n            })\n            .then((res) => {\n              if (res.data.code == 10000) {\n                this.$store.dispatch(\"showToast\", {\n                  value: \"取消成功\",\n                });\n                this.$store.dispatch(\"getroomPrivate\", {\n                  isPrivate: 0,\n                  password: \"\",\n                });\n              }\n            });\n\n          break;\n        case \"房间标题\":\n          this.$emit(\"closeRoomFit\");\n          this.$refs.PopuInput.setPopup({\n            type: \"string\",\n            title: \"修改房间标题\",\n            value: this.$store.state.roomTitle,\n            // value: \"\",\n            placeholder: \"请输入房间标题\",\n          });\n          break;\n        case \"房间公告\":\n          this.$emit(\"closeRoomFit\");\n          if (this.$store.state.roomType == \"live\") {\n            this.$refs.Notice.setPopup({\n              isShow: true,\n              value: this.$RCLiveRoomLib.im._roomNotice\n                ? this.$RCLiveRoomLib.im._roomNotice\n                : \"欢迎来到 \" + this.$RCLiveRoomLib.roomInfo[\"roomName\"],\n            });\n          } else {\n            this.$refs.Notice.setPopup({\n              isShow: true,\n              value: this.$RCVoiceRoomLib.roomInfo[\"extra\"]\n                ? this.$RCVoiceRoomLib.roomInfo[\"extra\"]\n                : \"欢迎来到 \" + this.$RCVoiceRoomLib.roomInfo[\"roomName\"],\n            });\n          }\n          break;\n        case \"房间背景\":\n          this.$emit(\"closeRoomFit\");\n          this.$emit(\"openChangeBack\");\n          break;\n        case \"自由上麦\":\n          this.$emit(\"closeRoomFit\");\n          if (this.$store.state.roomType == \"live\") {\n            await this.$RCLiveRoomLib.setRoomInfo({\n              ...this.$RCLiveRoomLib.roomInfo,\n              isFreeEnterSeat: true,\n            });\n            this.$store.dispatch(\"showToast\", {\n              value: \"融云 RTC：当前观众可自由上麦\",\n            });\n            //直播逻辑\n\n            this.$RCLiveRoomLib.updateKeyValue({\n              key: \"ROOM_INFO_PRE_FreeEnterSeat\",\n              value: 1,\n            });\n          } else {\n            await this.$RCVoiceRoomLib.setRoomInfo({\n              ...this.$RCVoiceRoomLib.roomInfo,\n              isFreeEnterSeat: true,\n            });\n            this.$store.dispatch(\"showToast\", {\n              value: \"融云 RTC：当前观众可自由上麦\",\n            });\n          }\n          this.$store.state.isFreeEnterSeat = true;\n          break;\n        case \"申请上麦\":\n          this.$emit(\"closeRoomFit\");\n          if (this.$store.state.roomType == \"live\") {\n            await this.$RCLiveRoomLib.setRoomInfo({\n              ...this.$RCLiveRoomLib.roomInfo,\n              isFreeEnterSeat: false,\n            });\n            this.$store.dispatch(\"showToast\", {\n              value: \"融云 RTC：当前观众上麦上麦要申请\",\n            });\n            //直播逻辑\n            this.$RCLiveRoomLib.updateKeyValue({\n              key: \"ROOM_INFO_PRE_FreeEnterSeat\",\n              value: 0,\n            });\n          } else {\n            await this.$RCVoiceRoomLib.setRoomInfo({\n              ...this.$RCVoiceRoomLib.roomInfo,\n              isFreeEnterSeat: false,\n            });\n            this.$store.dispatch(\"showToast\", {\n              value: \"融云 RTC：当前观众上麦上麦要申请\",\n            });\n            //直播逻辑\n          }\n          this.$store.state.isFreeEnterSeat = false;\n          break;\n        case \"全麦锁麦\":\n          try {\n            this.$emit(\"closeRoomFit\");\n            this.$RCVoiceRoomLib\n              .setRoomInfo({\n                ...this.$RCVoiceRoomLib.roomInfo,\n                isMuteAll: true,\n              })\n              .then(() => {\n                // console.log(\"setRoomInfo\", this.$RCVoiceRoomLib);\n              });\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n              this.$store.dispatch(\"showToast\", {\n                value: \"融云 RTC:全部麦位已静音\",\n              });\n            }, 50);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"全麦锁麦失败\",\n            });\n\n            console.log(error);\n          }\n\n          break;\n        case \"解锁全麦\":\n          this.$emit(\"closeRoomFit\");\n          try {\n            await this.$RCVoiceRoomLib.setRoomInfo({\n              ...this.$RCVoiceRoomLib.roomInfo,\n              isMuteAll: false,\n            });\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n              this.$store.dispatch(\"showToast\", {\n                value: \"融云 RTC:已解锁全麦\",\n              });\n            }, 50);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"解锁全麦失败\",\n            });\n            console.log(error);\n          }\n\n          break;\n        case \"全麦锁座\":\n          this.$emit(\"closeRoomFit\");\n          try {\n            await this.$RCVoiceRoomLib.setRoomInfo({\n              ...this.$RCVoiceRoomLib.roomInfo,\n              isLockAll: true,\n            });\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n              this.$store.dispatch(\"showToast\", {\n                value: \"融云 RTC：全部座位已锁定\",\n              });\n            }, 50);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"全麦锁座失败\",\n            });\n            console.log(error);\n          }\n\n          break;\n        case \"解锁全座\":\n          this.$emit(\"closeRoomFit\");\n          try {\n            await this.$RCVoiceRoomLib.setRoomInfo({\n              ...this.$RCVoiceRoomLib.roomInfo,\n              isLockAll: false,\n            });\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n              this.$store.dispatch(\"showToast\", {\n                value: \"融云 RTC：已解锁全座\",\n              });\n            }, 50);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"解锁全座失败\",\n            });\n            console.log(error);\n          }\n\n          break;\n        case \"静音\":\n          await this.$RCVoiceRoomLib.muteAllRemoteStreams(true);\n          this.$store.dispatch(\"getMicrophone\", true);\n          this.$store.dispatch(\"showToast\", {\n            value: \"融云 RTC:扬声器已静音\",\n          });\n          this.$emit(\"closeRoomFit\");\n          break;\n        case \"取消静音\":\n          await this.$RCVoiceRoomLib.muteAllRemoteStreams(false);\n          this.$store.dispatch(\"getMicrophone\", false);\n          this.$store.dispatch(\"showToast\", {\n            value: \"融云 RTC：已取消静音\",\n          });\n          this.$emit(\"closeRoomFit\");\n          break;\n        case \"设置4个座位\":\n          this.$emit(\"closeRoomFit\");\n          try {\n            await this.$RCVoiceRoomLib.setRoomInfo({\n              ...this.$RCVoiceRoomLib.roomInfo,\n              seatCount: 5,\n            });\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n              seatcountChange = {\n                count: 4,\n              };\n              this.$RCVoiceRoomLib.im.messageUpdate(\n                \"RC:Chatroom:Seats\",\n                seatcountChange\n              );\n\n              this.$RCVoiceRoomLib.emit(\"MessageReceived\", {\n                //发本地\n                //模拟本地消息发送\n                messageType: \"RC:Chatroom:Seats\",\n                content: seatcountChange,\n              });\n            }, 200);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"设置4个座位失败\",\n            });\n            console.log(error);\n          }\n\n          break;\n        case \"设置8个座位\":\n          this.$emit(\"closeRoomFit\");\n          try {\n            await this.$RCVoiceRoomLib.setRoomInfo({\n              ...this.$RCVoiceRoomLib.roomInfo,\n              seatCount: 9,\n            });\n\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n              seatcountChange = {\n                count: 8,\n              };\n              this.$RCVoiceRoomLib.im.messageUpdate(\n                \"RC:Chatroom:Seats\",\n                seatcountChange\n              );\n\n              this.$RCVoiceRoomLib.emit(\"MessageReceived\", {\n                //发本地\n                //模拟本地消息发送\n                messageType: \"RC:Chatroom:Seats\",\n                content: seatcountChange,\n              });\n            }, 200);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"设置8个座位失败\",\n            });\n            console.log(error);\n          }\n\n          break;\n        case \"屏蔽词\":\n          this.$emit(\"closeRoomFit\");\n          this.$emit(\"openShieldingWords\");\n          break;\n        case \"抱下麦\":\n          this.$emit(\"closeUserClickSeizeSeat\");\n          this.$emit(\"closeAdminClickOther\");\n          try {\n            await this.$RCVoiceRoomLib.kickUserFromSeat(userInfo.userId);\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n            }, 200);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"抱下麦失败\",\n            });\n            console.log(error);\n          }\n\n          break;\n        case \"邀请上麦\":\n          await this.$RCVoiceRoomLib.pickUserToSeat(userInfo.userId);\n          this.$emit(\"closeUserClickSeizeSeat\");\n          this.$emit(\"closeAdminClickOther\");\n          break;\n        case \"关闭座位\":\n          try {\n            await this.$RCVoiceRoomLib.lockSeat(userInfo.index, true);\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n            }, 50);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"关闭座位失败\",\n            });\n            console.log(error);\n          }\n\n          this.$emit(\"closeUserClickSeizeSeat\");\n          break;\n        case \"开启座位\":\n          try {\n            await this.$RCVoiceRoomLib.lockSeat(userInfo.index, false);\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n            }, 50);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"开启座位失败\",\n            });\n            console.log(error);\n          }\n\n          this.$emit(\"closeUserClickSeizeSeat\");\n          break;\n        case \"取消禁麦\":\n          try {\n            await this.$RCVoiceRoomLib.muteSeat(userInfo.index, false);\n\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n            }, 200);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"取消禁麦失败\",\n            });\n            console.log(error);\n          }\n\n          this.$emit(\"closeUserClickSeizeSeat\");\n          break;\n        case \"座位禁麦\":\n          try {\n            await this.$RCVoiceRoomLib\n              .muteSeat(userInfo.index, true)\n              .then((res) => {\n                console.log(res);\n              })\n              .catch((err) => {\n                console.log(err);\n              });\n            setTimeout(() => {\n              this.$store.dispatch(\"getSeatInfoList\");\n            }, 200);\n          } catch (error) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"座位禁麦失败\",\n            });\n            console.log(error);\n          }\n\n          this.$emit(\"closeUserClickSeizeSeat\");\n          break;\n        case \"踢出房间\":\n          await this.$RCVoiceRoomLib.kickUserFromRoom(userInfo.userId);\n          // console.log(userInfo);\n          txtMsgKickOut = {\n            targetName: userInfo.userName,\n            targetId: userInfo.userId,\n            userId: this.$RCVoiceRoomLib.im.userId,\n            userName: this.$store.state.userInfo.userName,\n          };\n          this.$RCVoiceRoomLib.im.messageUpdate(\n            \"RC:Chatroom:KickOut\",\n            txtMsgKickOut\n          );\n\n          this.$RCVoiceRoomLib.emit(\"MessageReceived\", {\n            //发本地\n            //模拟本地消息发送\n            messageType: \"RC:Chatroom:KickOut\",\n            content: txtMsgKickOut,\n          });\n          this.$emit(\"closeUserClickSeizeSeat\");\n          this.$emit(\"closeAdminClickOther\");\n          break;\n        default:\n      }\n    },\n    clickYes: function (value) {\n      request\n        .setRoomPrivate({\n          isPrivate: 1,\n          password: value,\n          roomId:\n            this.$store.state.roomType == \"live\"\n              ? this.$RCLiveRoomLib._roomidcli\n              : this.$RCVoiceRoomLib._roomidcli,\n        })\n        .then((res) => {\n          // console.log(res);\n          if (res.data.code == 10000) {\n            this.$store.dispatch(\"showToast\", {\n              value: \"设置成功\",\n            });\n            console.log(\"this.$refs.PopuInput\", this.$refs.PopuInput);\n            this.$refs.PopuInput.onClose();\n            this.$store.dispatch(\"getroomPrivate\", {\n              isPrivate: 1,\n              password: value,\n            });\n          }\n        });\n    },\n    NoticeUpdate: function (notice) {\n      //修改公告上报\n      console.log(\"notice\", notice);\n      this.$RCLiveRoomLib.im._roomNotice = notice;\n      this.$RCLiveRoomLib.updateKeyValue({\n        key: \"ROOM_INFO_PRE_notice\",\n        value: notice,\n      });\n    },\n    clickTitleYes: function (value) {\n      // console.log(\"Title\", value);\n      request\n        .setRoomTitle({\n          name: value,\n          roomId:\n            this.$store.state.roomType == \"live\"\n              ? this.$RCLiveRoomLib._roomidcli\n              : this.$RCVoiceRoomLib._roomidcli,\n        })\n        .then((res) => {\n          console.log(res);\n          if (res.data.code == 10000) {\n            if (this.$store.state.roomType == \"live\") {\n              this.$RCLiveRoomLib.setRoomInfo({\n                ...this.$RCLiveRoomLib.roomInfo,\n                roomName: value,\n              });\n            } else {\n              this.$RCVoiceRoomLib.setRoomInfo({\n                ...this.$RCVoiceRoomLib.roomInfo,\n                roomName: value,\n              });\n            }\n            this.$store.dispatch(\"getroomTitle\", value);\n          } else {\n            this.$store.dispatch(\"showToast\", {\n              value: res.data.msg,\n            });\n          }\n        });\n    },\n    GetNotice: function (value) {\n      if (this.$store.state.roomType == \"live\") {\n        this.$RCLiveRoomLib.setRoomInfo({\n          ...this.$RCLiveRoomLib.roomInfo,\n          extra: value,\n        });\n        this.$RCLiveRoomLib.roomInfo.extra = value;\n        console.log(\"value\", value);\n        let txt = {\n          content: \"房间公告已更新!\",\n        };\n        this.$RCLiveRoomLib.im.messageUpdate(\"RC:TxtMsg\", txt);\n        this.$RCLiveRoomLib.emit(\"MessageReceived\", {\n          //发本地\n          //模拟本地消息发送\n          messageType: \"RC:TxtMsg\",\n          content: txt,\n        });\n      } else {\n        this.$RCVoiceRoomLib.setRoomInfo({\n          ...this.$RCVoiceRoomLib.roomInfo,\n          extra: value,\n        });\n        this.$RCVoiceRoomLib.roomInfo.extra = value;\n        console.log(\"value\", value);\n        let txt = {\n          content: \"房间公告已更新!\",\n        };\n        this.$RCVoiceRoomLib.im.messageUpdate(\"RC:TxtMsg\", txt);\n        this.$RCVoiceRoomLib.emit(\"MessageReceived\", {\n          //发本地\n          //模拟本地消息发送\n          messageType: \"RC:TxtMsg\",\n          content: txt,\n        });\n      }\n    },\n  },\n};\n</script>\n<style scoped>\n.functionKey {\n  display: inline-block;\n  width: 0.5rem;\n  height: 0.75rem;\n  position: relative;\n  background-repeat: no-repeat;\n  background-size: 0.5rem 0.5rem;\n  background-position: top;\n  text-align: center;\n}\n.functionKey-span {\n  display: inline-block;\n  height: 0.17rem;\n  font-size: 0.12rem;\n  line-height: 0.17rem;\n  margin-top: 0.58rem;\n}\n</style>\n"]}]}