{"remainingRequest":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/src/pages/room/callRoom/index.vue?vue&type=style&index=0&id=7a5f270c&scoped=true&lang=css&","dependencies":[{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/src/pages/room/callRoom/index.vue","mtime":1648104828601},{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cuifengbo/work/RCRTC-Git/rcrtc-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCB1cmwoIi4vaW5kZXguY3NzIik7Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8NA","file":"index.vue","sourceRoot":"src/pages/room/callRoom","sourcesContent":["<template>\n  <div class=\"CallRoom\">\n    <div class=\"CallRoom-noRoom\" v-if=\"keepShow\">\n      <span class=\"CallRoom-noRoom-value\">请创建房间</span>\n    </div>\n    <scroller\n      v-else\n      class=\"infinite-list-wrapper\"\n      :on-refresh=\"reffor\"\n      :on-infinite=\"inffor\"\n      ref=\"scrfor\"\n    >\n      <ul class=\"infinite-list\">\n        <li\n          v-for=\"key in this.$store.state.roomList\"\n          class=\"list-item\"\n          :key=\"key.id\"\n        >\n          <RoomTab :data=\"key\" @joinchatRoom=\"joinchatRoom\" />\n        </li>\n      </ul>\n    </scroller>\n  </div>\n</template>\n\n<script>\nimport RoomTab from \"../roomTab/index.vue\";\nimport BScroll from \"better-scroll\";\nimport request from \"../../../request/index\";\nimport { GetQueryString } from \"../../../utils/utils\";\nexport default {\n  name: \"CallRoom\",\n  data: function () {\n    return {\n      roomsList: [],\n      loading: false,\n      myscroll: null,\n      dataList: [],\n      roomListLength: false,\n      page: 1,\n      size: 10,\n      keepShow: false,\n    };\n  },\n  watch: {\n    listenstage: function (newVal) {\n      console.log(\"newVal\", newVal);\n      this.$nextTick(() => {\n        if (this.$store.state.roomList.length > 0) {\n          this.keepShow = false;\n        } else {\n          this.keepShow = true;\n        }\n      });\n    },\n  },\n  components: {\n    RoomTab,\n  },\n  computed: {\n    noMore() {\n      if (this.roomListLength) {\n        return true;\n      }\n      return false;\n    },\n    listenstage() {\n      return this.$store.state.roomList;\n    },\n  },\n  // eslint-disable-next-line vue/no-dupe-keys\n  methods: {\n    getRoomList: function (page) {\n      // console.log(this.authorizationVal);\n      let reqObj = {\n        page: page,\n        size: this.size,\n      };\n      if (\n        //直播房间\n        GetQueryString(\"roomType\") &&\n        GetQueryString(\"roomType\") == \"liveRoom\"\n      ) {\n        reqObj.type = 3;\n      }\n      request\n        .roomList(reqObj)\n        .then((response) => {\n          this.dataList = response.data.data;\n          if (page == 1) {\n            this.$store.dispatch(\"changesRoomsList\", response.data.data.rooms);\n          } else {\n            this.$store.dispatch(\n              \"changesRoomsList\",\n              this.$store.state.roomList.concat(response.data.data.rooms)\n            );\n          }\n          response.data.data.rooms.length < 10\n            ? (this.roomListLength = true)\n            : (this.roomListLength = false);\n          // store.actions.changesVal([]);\n        })\n        .catch((err) => {\n          console.error(\"请求失败\", err);\n          // alert(\"请求失败\", err);\n        });\n    },\n    joinchatRoom: function (roomId) {\n      request\n        .roominformation({ roomId: roomId })\n        .then(async (res) => {\n          if (res.data.code == 10000) {\n            if (\n              //直播房间\n              GetQueryString(\"roomType\") &&\n              GetQueryString(\"roomType\") == \"liveRoom\"\n            ) {\n              this.$router.push(\"/live?roomid=\" + roomId);\n              return;\n            } else {\n              await this.$RCVoiceRoomLib.joinRoom(roomId);\n              this.$router.push(\"/room/house\");\n            }\n            await this.$RCVoiceRoomLib.joinRoom(roomId);\n            let txtEnter = {\n              userId: this.$RCVoiceRoomLib.im.userId,\n              userName: this.$store.state.userInfo.userName,\n            };\n            this.$RCVoiceRoomLib.im.messageUpdate(\n              \"RC:Chatroom:Enter\",\n              txtEnter\n            );\n\n            this.$router.push(\"/room/house\");\n          } else {\n            this.$router.push(\"/room/roomover\");\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    setBScroll: function () {\n      this.myscroll = null;\n      this.myscroll = new BScroll(\".infinite-list-wrapper\", {\n        pullDownRefresh: {\n          threshold: 50,\n          stop: 20,\n        },\n        scrollbar: {\n          fade: true,\n          interactive: false, // 1.8.0 新增\n        },\n        bounce: true,\n        probeType: 3, //0,1，2，3\n        pullUpLoad: true, //上拉加载更多,默认为false，不允许\n        click: true,\n      });\n      this.myscroll.on(\"pullingDown\", () => {\n        // console.log(\"下拉了\");\n        this.getRoomList(1);\n        this.page = 1;\n        setTimeout(() => {\n          this.myscroll.finishPullDown(); // 自动调用 .refresh()\n        }, 500);\n      });\n      this.myscroll.on(\"pullingUp\", () => {\n        this.loading = true;\n        this.page += 1;\n        setTimeout(() => {\n          this.loading = false;\n          this.myscroll.finishPullUp(); // 自动调用 .refresh()\n        }, 500);\n      });\n    },\n    reffor: async function () {\n      this.page = 1; //重置页数刷新每次页数都是第一页\n      try {\n        await this.getRoomList(1);\n        setTimeout(() => {\n          this.$refs.scrfor.finishPullToRefresh();\n          // done(); //进行下一次加载操作\n        }, 500);\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    // 上拉加载\n    inffor: async function (done) {\n      // console.log(\"上拉了\");\n      if (this.$store.state.roomList.length < 10) {\n        done(2);\n      } else {\n        if (this.$store.state.roomList.length > 10 && this.roomListLength) {\n          done(2);\n        } else {\n          this.page += 1;\n          try {\n            await this.getRoomList(this.page);\n            setTimeout(() => {\n              done(true); //进行下一次加载操作\n            }, 500);\n          } catch (err) {\n            console.log(err);\n          }\n        }\n      }\n    },\n  },\n  created() {},\n  mounted() {\n    this.$nextTick(() => {\n      if (this.$store.state.roomList.length > 0) {\n        this.keepShow = false;\n      } else {\n        this.keepShow = true;\n      }\n    });\n  },\n};\n</script>\n<style scoped>\n@import url(\"./index.css\");\n</style>"]}]}